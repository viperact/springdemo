<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- Namespaces에서 tx체크 -->

	<!-- Annotation을 이용한 트랜잭션 처리 -->

	<!-- [2] SqlSessionFactoryBean 빈 선언 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:config/memMapper.xml</value>
			</list>
		</property>
	</bean>

	<!-- [3] SqlSessionTemlpate 빈 선언 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<!-- Spring JDBC나 Mybatis를 이용해서 DB연동을 처리하는 경우 DataSourceTransactionManager가 
		트랜잭션 관리자로 사용된다. -->
	<!-- [4] TransactionManager 빈 선언 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- [5] 선언적 트랜잭션: annotation을 이용한 트랜잭션처리 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- [6] MemDaoImp 빈 선언 -->
	<bean id="dao" class="model.MemDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>

	<!-- [7] ServiceImp 빈 선언 -->
	<bean id="service" class="part03.ServiceImp">
		<property name="memDAO" ref="dao" />
	</bean>

	<!-- [8] MemController 빈 선언 -->
	<bean class="part03.MemController">
		<property name="svc" ref="service" />
	</bean>
</beans>
